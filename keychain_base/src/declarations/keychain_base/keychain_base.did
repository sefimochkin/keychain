type KeyDataCore = record {
    "email_address": text;
    "phone_number": opt text;
    "address": opt text;
};

type ObfuscatedDataCore = record {
    "website_url": text;
    "website_id": opt text;
    "obfuscated_email_address": text;
    "obfuscated_phone_number": opt text;
    "password": opt text;
};

type ErrorResponse = record {
    "error_code": nat;
    "error_message": text;
};

type EmptySuccessResponse = record {
    "code": nat;
};

type GetKeyDataSuccessResponse = record {
    "code": nat;
    "data": opt KeyDataCore;
};

type GetObfuscatedDataSuccessResponse = record {
    "code": nat;
    "data": opt vec ObfuscatedDataCore;
};


service : {
    "init_keydata": (KeyDataCore, text) -> (variant{success: EmptySuccessResponse; error: ErrorResponse});
    "init_obfuscated_data": (ObfuscatedDataCore, text) -> (variant{success: EmptySuccessResponse; error: ErrorResponse});
    "get_keydata": (text) -> (variant{success: GetKeyDataSuccessResponse; error: ErrorResponse}) query;
    "get_obfuscated_data": (text) -> (variant{success: GetObfuscatedDataSuccessResponse; error: ErrorResponse}) query;
    "change_keydata": (KeyDataCore, text) -> (variant{success: EmptySuccessResponse; error: ErrorResponse});
}